image: ubuntu:16.04

before_script:
  - apt-get update -qq
  - apt-get install -y -qq software-properties-common python-software-properties
  - add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu/ xenial universe multiverse" 
  - add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates universe multiverse"
  - add-apt-repository -y ppa:webupd8team/java
  - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
  - apt-get update -qq
  - apt-get install -y -qq gettext libwagon-java libcommons-math-java libcommons-math3-java maven protobuf-compiler oracle-java8-installer git sed equivs
 
stages:
  - builddeb
  - sign
  - test
  - deploy
  


build:
  stage: builddeb
  script:
    - ./builddeb.sh
  artifacts:
    name: "{$CI_BUILD_NAME_$CI_BUILD_REF_NAME}"
    paths: 
    - ./dist/*

mvntest:
  stage: test
  script:
    - mvn test
    
signdebs:
  stage: sign
  before_script:
  - apt-get update -qq
  - apt-get install -y gnupg debsigs
  script: ./signdebs.sh
  dependencies:
  - build
  artifacts:
    name: "svarog_signed_{$CI_BUILD_NAME_$CI_BUILD_REF_NAME}"
    paths:
    - ./dist/*.deb
    
deploy_xenial_development:
  stage: deploy
  only:
    - development
  before_script:
    - apt-get update -qq -y
    - apt-get install -y -qq sshpass openssh-client uuid-runtime
  dependencies:
    - signdebs
  script:
    - export DEB_SRV=$DEB_NIGHTLY_SRV
    - export MASTER=0
    - export DEB_USER=$DEB_NIGHTLY_USER
    - export SSHPASS=$DEB_NIGHTLY_PASSWD
    - export RELEASE=xenial
    - ./deploydebs.sh

deploy_xenial_testing:
  stage: deploy
  only:
    - release/
  before_script:
    - apt-get update -qq -y
    - apt-get install -y -qq sshpass openssh-client uuid-runtime
  dependencies:
    - signdebs
  script:
    - export DEB_SRV=$DEB_TESTING_SRV
    - export MASTER=0
    - export DEB_USER=$DEB_TESTING_USER
    - export SSHPASS=$DEB_TESTING_PASSWD
    - export RELEASE=xenial
    - ./deploydebs.sh

deploy_xenial_master:
  stage: deploy
  only:
    - master
  before_script:
    - apt-get update -qq -y
    - apt-get install -y -qq sshpass openssh-client uuid-runtime
  dependencies:
    - signdebs
  script:
    - export DEB_SRV=$DEB_STABLE_SRV
    - export MASTER=1
    - export DEB_USER=$DEB_STABLE_USER
    - export SSHPASS=$DEB_STABLE_PASSWD
    - export RELEASE=xenial
    - ./deploydebs.sh
